
@INPROCEEDINGS{4725646, 
author={L. Yuefeng and Z. An}, 
booktitle={2008 International Symposium on Computational Intelligence and Design}, 
title={Multi-Agent System and Its Application in Combat Simulation}, 
year={2008}, 
volume={1}, 
number={}, 
pages={448-452}, 
abstract={Most conventional methods show their disadvantages in modern combat simulation. Multi-agent system (MAS) is an important research field of distributed artificial intelligence (DAI) and it proposes a new way of combat simulation. The focus of this paper is the MAS theory and its application in combat simulation. Definition of agent and MAS was proposed firstly and then the differences between MAS based and conventional combat simulation methods ware analyzed. After a discussion over the characteristics of combat, we found the combat was a complex adaptive system (CAS). MAS based CAS should be a new way of combat simulation. Finally, as an example, ISAAC, a famous MAS based combat simulation system, was analyzed to show the application of MAS in combat simulation. The analysis shows that MAS has many characteristics of modern warfare and is a promising way of combat simulation.}, 
keywords={learning (artificial intelligence);military computing;multi-agent systems;multiagent system;combat simulation;distributed artificial intelligence;complex adaptive system;modern warfare;Multiagent systems;Artificial intelligence;Analytical models;Content addressable storage;Intelligent agent;Assembly systems;Computational modeling;Adaptive systems;Humans;Problem-solving;Distributed Artificial Intelligence (DAI);Multi-Agent System (MAS);Combat Simulation;Command and Control (C2);Complex Adaptive System (CAS)}, 
doi={10.1109/ISCID.2008.45}, 
ISSN={}, 
month={Oct},
note={Amount of References: 7 },}

@INPROCEEDINGS{6521966, 
author={K. Addakiri and M. Bahaj}, 
booktitle={2013 International Conference on Computer Applications Technology (ICCAT)}, 
title={Applying knowledge model to multi-agent system}, 
year={2013}, 
volume={}, 
number={}, 
pages={1-6}, 
abstract={MAS is a powerful paradigm in nowadays, is become promising means for the development of distributed systems, however its disadvantage is that it lacks the interconnection with semantic web such as Ontology Web Language. In this article, we aim to present and to implement a semantic knowledge model of an agent suitable for discrete environments by using the Jena : is a Java framework for the creation of applications for the semantic web, the JADE : is a flexible agent platform that provides a middleware layer for the development of distributed multi-agent systems and the JESS is the rule engine for the JAVA platform used to enrich the ontology with logic and functionality. The use of these software enable interconnection of Agent and Semantic Web technologies can be used in an agent based application where such interconnection is needed.}, 
keywords={Java;middleware;multi-agent systems;ontologies (artificial intelligence);semantic Web;knowledge model;ontology Web language;Jena framework;semantic Web;JADE flexible agent platform;middleware layer;distributed multiagent system;Java platform;agent technology;agent based application;Ontologies;OWL;Semantics;Multi-agent systems;Resource description framework;Java Agent Development Framework (JADE);Web Ontology Language (OWL);Java Expert System Shell (JESS);JENA;SPARQL},
doi={10.1109/ICCAT.2013.6521966}, 
ISSN={}, 
month={Jan},
note={Amount of References: 0 },}



@INPROCEEDINGS{4441679, 
author={A. L. Dimeas and N. D. Hatziargyriou}, 
booktitle={2007 International Conference on Intelligent Systems Applications to Power Systems}, 
title={Design of a MAS for an Island System}, 
year={2007}, 
volume={}, 
number={}, 
pages={1-3}, 
abstract={The introduction by the Greek state of a new law that regulates the numerous non interconnected Greek Islands creates an interesting area for using multi agent system technology. The scope of this paper is to analyze the new code and provide an formal UML description of the MAS. This is a critical issue in multi agent systems and in complex systems, since the complexity need to be organized. Furthermore a simplified version of the system is planned to be installed in the island of Kythnos.}, 
keywords={multi-agent systems;power engineering computing;Unified Modeling Language;Greek state;multiagent system technology;UML description;Kythnos;power systems;Batteries;Inverters;Power system interconnection;Scheduling;Unified modeling language;Production;Power system security;Senior members;Power generation;Power systems;Distributed Generation;Microgrids;Multi Agent System;UML;Kythnos Island}, 
doi={10.1109/ISAP.2007.4441679}, 
ISSN={}, 
month={Nov},
note={Amount of References: 11 },}

@INPROCEEDINGS{7321654, 
author={A. T. E. Dib and Z. Sahnoun}, 
booktitle={2015 Federated Conference on Computer Science and Information Systems (FedCSIS)}, 
title={Model checking of Multi Agent System architectures using BigMC}, 
year={2015}, 
volume={}, 
number={}, 
pages={1717-1722}, 
abstract={Formal methods offer a great potential for early integration of verification in the design process. These are based on theories and mathematical notations that allow the formal specification of a program and check its implementation. They offer a global vision and a high-level structure and system organization. In addition, the software architecture plays a key role as a pivot point between the requirements of a system and its implementation. In this paper, we present a formal approach based on Bigraphical Reactive Systems for specifying and verifying the main features of the Multi Agent Systems (MAS) architectures based on the Belief-Desire-Intention (BDI) agent model. The proposed approach supports both the static and dynamic aspects of BDI-MAS architectures at different levels of abstraction. Further, we use automatic proof tool BigMc to analyze the specifications and verify system properties.}, 
keywords={formal specification;multi-agent systems;program verification;software architecture;automatic proof tool;BDI-MAS architectures;dynamic aspects;static aspects;BDI agent model;belief-desire-intention agent model;MAS architectures;feature specification;feature verification;bigraphical reactive systems;software architecture;system organization;high-level structure;formal specification;design process verification;formal methods;BigMC;multiagent system architectures;model checking;Computer architecture;Model checking;Multi-agent systems;Analytical models;Formal verification;Service-oriented architecture;Multi-Agent Systems;software architecture description language;Bigraphical Reactive System;formal specification;reconfiguration;formal verification;Bigraphical Model Checker}, 
doi={10.15439/2015F300}, 
ISSN={}, 
month={Sept},
note={Amount of References: 11 },}

@INPROCEEDINGS{5474446, 
author={R. Neruda}, 
booktitle={2010 Second International Conference on Computer and Network Technology}, 
title={Ontology Description of Jade Computational Agents in OWL-DL}, 
year={2010}, 
volume={}, 
number={}, 
pages={514-518}, 
abstract={This paper describes ontological description of computational agents, their properties and abilities. The goal of the work is to allow for autonomous behavior and semi-automatic composition of agents within a multi-agent system. The system has to be create foundation for the interchangeability of computational components, and emergence of new models. This paper focuses on ways of representing agents and systems in standard formalisms, such as description logics, OWL, and Jade.}, 
keywords={formal logic;multi-agent systems;ontologies (artificial intelligence);semantic Web;ontology description;Jade computational agents;OWL-DL;multi-agent system;description logics;Ontologies;Logic;Multiagent systems;Semantic Web;Computer networks;Computational intelligence;Humans;Standardization;Paper technology;OWL;Multi-agent systems;Ontology;Computational intelligence}, 
doi={10.1109/ICCNT.2010.116}, 
ISSN={}, 
month={April},
note={Amount of References: 1 },}

@INPROCEEDINGS{1342988, 
author={W. Chainbi}, 
booktitle={Proceedings. IEEE/WIC/ACM International Conference on Intelligent Agent Technology, 2004. (IAT 2004).}, 
title={Multi-agent systems: a Petri net with objects based approach}, 
year={2004}, 
volume={}, 
number={}, 
pages={429-432}, 
abstract={Most of time, an agent theory is expressed by modal logic which is a good specification tool since it eases the description of intentional agents. However, this formalism cannot be easily refined into implementation even if some counter-examples exist. This work proposes another type of formalism called cooperative objects which are based on Petri nets and objects. We show how it may be used with benefits to model multi-agent systems. More precisely, we argue that the presented formalism can bridge the gap between the world of formal theory and the world of system development. We illustrate our study with the well known prey/predators game.}, 
keywords={multi-agent systems;object-oriented methods;formal specification;Petri nets;predator-prey systems;game theory;multi-agent systems;object based approach;Petri nets;agent theory;modal logic;intentional agents;cooperative objects;formal theory;prey-predators game;Multiagent systems;Petri nets;Logic;Data structures;Bridges;Software agents;Research and development;Software design;Software engineering;Equations}, 
doi={10.1109/IAT.2004.1342988}, 
ISSN={}, 
month={Sept},
note={Amount of References: 9 },}

@INPROCEEDINGS{6481885, 
author={N. Hamrouni and Z. Abderrahim}, 
booktitle={2012 6th International Conference on Sciences of Electronics, Technologies of Information and Telecommunications (SETIT)}, 
title={Looking for verification and validation of a Multi agent System using new formalism: APN}, 
year={2012}, 
volume={}, 
number={}, 
pages={30-35}, 
abstract={In this paper, we present a new formal Method for the Verification of a Multi agent Systems (MAS). We explain and applied a new method based on agents called Agents Petri Nets (APN). Our model describes each entity to model the system and verify the state of the agent and its behavior. This method use, mainly, the property of Petri Nets as deadline, state home, conflict, etc. Therefore we use a formalism having a mathematical definition in order to verify some property of the interactive systems. To validate our contribution, we will deal with real example of a Multi agents System.}, 
keywords={formal verification;interactive systems;multi-agent systems;Petri nets;software agents;multiagent system;APN;formal method;MAS;agents petri nets;mathematical definition;interactive systems;formal verification;formal validation;Petri nets;Unified modeling language;Computational modeling;Multi-agent systems;Mathematical model;Buildings;Model checking;Agent Petri Nets;Multi Agents Systems;New Formalism;Validation;Verification}, 
doi={10.1109/SETIT.2012.6481885}, 
ISSN={}, 
month={March},
note={Amount of References: 9 },}

@INPROCEEDINGS{7554553, 
author={B. Klebanov and T. Antropov and E. Riabkina}, 
booktitle={2016 35th Chinese Control Conference (CCC)}, 
title={The principles of multi-agent models of development based on the needs of the agents}, 
year={2016}, 
volume={}, 
number={}, 
pages={7551-7555}, 
abstract={Work is devoted to development of the principles of creation of the model of development of artificial society based on processes of emergence and realization of needs of specific agents. The propose structure of the objective, from the point of view of researchers, knowledge and mental knowledge of the particular agent. A basis of the knowledge base are: possible methods of application of object (relation) in recipes satisfaction of needs of active agents; recipes of creation, change of object (relation); counteraction to object (relation), protection against object, overcoming, destruction of object (relation); actualization - detection, identifications of object, definition of its relations with other objects. Classification of methods of strengthening of opportunities of active agents is offered. The model of process of a choice of strategy of realization of requirements based on gradual strengthening of opportunities of the agent is developed.}, 
keywords={multi-agent systems;multi-agent models;artificial society;Active agent;global knowledge base;global data base;mental data base;Computational modeling;Social groups;Knowledge based systems;Psychology;Safety;Education;Multi-agent systems;Active agent;Requirement;Multi-Agent models;Artificial society;Global Knowledge Base (GKnB);Global Data Base (GDB);Mental Data Base (MDB)},
doi={10.1109/ChiCC.2016.7554553}, 
ISSN={1934-1768}, 
month={July},
note={Amount of References: 6 },}

@INPROCEEDINGS{7822181, 
author={T. Warnke and O. Reinhardt and A. M. Uhrmacher}, 
booktitle={2016 Winter Simulation Conference (WSC)}, 
title={Population-based CTMCS and agent-based models}, 
year={2016}, 
volume={}, 
number={}, 
pages={1253-1264}, 
abstract={Currently, only few agent-based models are implemented with a continuous representation of time, although state-of-the-art agent-based modeling and simulation (ABMS) frameworks support continuous-time models and continuous time often allows for a more faithful capturing of reality. Intrigued by this discrepancy, we take a closer look at population-based Continuous-Time Markov Chains (CTMCs), their modeling and their simulation, on the one hand, and, how continuous-time agent-based models are currently realized in state-of-the-art ABMS frameworks, like Repast Simphony and Netlogo, on the other hand. Subsequently, we adopt and adapt concepts and algorithms of modeling and simulating population-based CTMCs. We propose a solution how to integrate those into contemporary ABMS frameworks which results in a more succinct description of continuous-time agent-based models.}, 
keywords={Markov processes;modelling;software agents;population-based CTMC;continuous representation;population-based continuous-time Markov chains;continuous-time agent-based models;Repast Simphony;Netlogo;modeling;ABMS frameworks;Sociology;Statistics;Object oriented modeling;Stochastic processes;Adaptation models;Biological system modeling;Computational modeling}, 
doi={10.1109/WSC.2016.7822181}, 
ISSN={1558-4305}, 
month={Dec},
note={Amount of References: 4 },}

@INPROCEEDINGS{6618689, 
author={A. Hedhili and W. L. Chaari and K. Ghédira}, 
booktitle={2013 World Congress on Computer and Information Technology (WCCIT)}, 
title={Explanation language syntax for Multi-Agent Systems}, 
year={2013}, 
volume={}, 
number={}, 
pages={1-6}, 
abstract={For Multi-Agent Systems (MAS) considered as complex systems, it is important to make agent reasoning comprehensible to users. In fact, MAS execution is uncontrollable; no one knows what effectively happens inside and how the solutions are given. In this context, our work aims to associate an explanation system with a multi-agent system. It consists first in intercepting significant events related to agents at runtime, thus an explanatory knowledge acquisition phase is performed where knowledge attributes are stored in an explanation structure named KAGR. Second, the semantic links between these attributes are expressed in an extended causal map model that constitutes knowledge representation formalism. Finally, an interpretation of this model is fulfilled using predicate logic. So, we get an acquisition, a representation, an interpretation of explanatory knowledge building up a knowledge based system for explanation. In this paper, we broach the interpretation phase where an explanation language is described to interpret the built causal maps.}, 
keywords={computational linguistics;formal logic;knowledge acquisition;knowledge based systems;knowledge representation;multi-agent systems;explanation language syntax;multiagent systems;complex systems;agent reasoning;MAS execution;explanatory knowledge acquisition phase;knowledge attributes;KAGR;explanation structure;semantic links;extended causal map model;knowledge representation formalism;predicate logic;knowledge based system;Cognition;Semantics;Context;Knowledge engineering;Syntactics;Multi-agent systems;explanation;reasoning;explanatory knowledge;causal map}, 
doi={10.1109/WCCIT.2013.6618689}, 
ISSN={}, 
month={June},
note={Amount of References: 1 },}

@incollection{GARRO2019315,
title = "Intelligent Agents: Multi-Agent Systems",
editor = "Shoba Ranganathan and Michael Gribskov and Kenta Nakai and Christian Schönbach",
booktitle = "Encyclopedia of Bioinformatics and Computational Biology",
publisher = "Academic Press",
address = "Oxford",
pages = "315 - 320",
year = "2019",
isbn = "978-0-12-811432-2",
doi = "https://doi.org/10.1016/B978-0-12-809633-8.20328-2",
url = "http://www.sciencedirect.com/science/article/pii/B9780128096338203282",
author = "Alfredo Garro and Max Mühlhäuser and Andrea Tundis and Matteo Baldoni and Cristina Baroglio and Federico Bergenti and Paolo Torroni",
keywords = "Agent, Agent based modeling and simulation, Agent oriented software engineering, Autonomous systems, Distributed systems, Multi agent system",
abstract = "This article provides an overview of the fundamentals related to agent-oriented paradigm and Multi Agent Systems (MASs). Specifically, in the first part, the definition of agent and its main features are reported. The second section discusses multi-agent systems and their main features by focusing on the concepts of automation, coordination, norms and emerging behavior which characterize a MAS. Finally, in the sections third and forth, two main ways to approach and use such paradigm for developing respectively agent-based simulations and agent-based software, by breaking down the leading and most renowned reference software platforms, are discussed.",
note="Amount of References: 0 ",
}




@INPROCEEDINGS{8270547, 
author={M. Pudane}, 
booktitle={2017 5th IEEE Workshop on Advances in Information, Electronic and Electrical Engineering (AIEEE)}, 
title={Classification of agent-based models from the perspective of multi-agent systems}, 
year={2017}, 
volume={}, 
number={}, 
pages={1-6}, 
abstract={Agent based modelling is a paradigm that is widely used to simulate and research systems where each entity is autonomous and behaves independently. Currently, there are many diverse agent based models, however, aside from general guidelines there are no particular analysis of how such models should be designed and implemented. On the other hand, any agent based model can be broken into a single agent and a system level; these abstraction levels are used in the design of multi-agent systems, moreover, agent based models are often implemented using mechanisms and tools from multi-agent systems. Author proposes that one of the ways this problem could be solved is classification of agent-based models from the perspective of multi-agent systems which is then used to provide decision support for the design of agent-based models.}, 
keywords={multi-agent systems;multiagent systems;single agent;diverse agent-based models;Biological system modeling;Modeling;Semantics;Cognition;Mathematical model;Multi-agent systems;Agent-based models;Multi-agent systems;Classification;Compatibility}, 
doi={10.1109/AIEEE.2017.8270547}, 
ISSN={}, 
month={Nov},
note={Amount of References: 0 },}


@INPROCEEDINGS{1342925, 
author={A. El Fallah-Seghrouchni and A. Suna}, 
booktitle={Proceedings. IEEE/WIC/ACM International Conference on Intelligent Agent Technology, 2004. (IAT 2004).}, 
title={Programming mobile intelligent agents: an operational semantics}, 
year={2004}, 
volume={}, 
number={}, 
pages={65-71}, 
abstract={This work presents the operational semantics of an agent oriented programming language called CLAIM. CLAIM allows the design of multiagent systems that support both stationary and mobile agents. Agents designed using CLAIM are endowed with cognitive capabilities, are able to communicate with other agents and are mobile. The primitives of mobility are inspired from the ambient calculus. The operational semantics reduction rules of CLAIM are illustrated on a practical example.}, 
keywords={mobile agents;programming language semantics;programming languages;multi-agent systems;knowledge engineering;cognitive systems;distributed programming;operational semantics;agent oriented programming language;CLAIM;multiagent systems;stationary agent;cognitive capabilities;ambient calculus;reduction rules;mobile intelligent agent programming;stationary agents;Intelligent agent;Computer languages;Multiagent systems;Mobile agents;Calculus;Distributed computing;Autonomous agents;Computer science;Communication standards;Standards development}, 
doi={10.1109/IAT.2004.1342925}, 
ISSN={}, 
month={Sept},
note={Amount of References: 8 },}

@article{suna2007programming,
  title={Programming mobile intelligent agents: An operational semantics},
  author={Suna, Alexandru and El Fallah Seghrouchni, Amal},
  journal={Web Intelligence and Agent Systems: An International Journal},
  abstract={This paper presents the operational semantics of an agent-oriented programming language called CLAIM. CLAIM allows to design multi-agent systems that support both stationary and mobile agents, endowed with cognitive capabilities and able to communicate. The semantics takes into account agents' reasoning, mobility, communication and concurrence, and contains a set of reduction rules between coherent states of a program. The operational semantics is a first step towards the formal verification of agent-based programs written in CLAIM. The reduction rules are illustrated on a case study.},
  volume={5},
  number={1},
  pages={47--67},
  year={2007},
  publisher={IOS Press},
  note={Amount of References: 21 },
}

@INPROCEEDINGS{6341645, 
author={S. Getir and M. Challenger and S. Demirkol and G. Kardas}, 
booktitle={2012 IEEE 36th Annual Computer Software and Applications Conference Workshops}, 
title={The Semantics of the Interaction between Agents and Web Services on the Semantic Web}, 
year={2012}, 
volume={}, 
number={}, 
pages={619-624}, 
abstract={Development of agent systems is naturally a complex task due to the fundamental characteristics of agents. In addition, agent internals and inter-agent behavior models inside Multi-agent Systems (MAS) may become even more difficult to implement when interactions of agents with web services on the Semantic Web are taken into account. Our approach consists of the utilization of a Domain-specific Modeling Language (DSML) during MAS development in order to cope with the abovementioned challenge. This paper describes how the formal semantics of this DSML can be defined by especially focusing on its viewpoint on agent-semantic service interactions and discusses the use of this semantics definition on MAS validation. Determined semantic rules are both defined and implemented by using Alloy specification language which has a strong description capability based on both relational and first-order logic.}, 
keywords={formal logic;multi-agent systems;semantic Web;simulation languages;specification languages;Web services;interaction semantics;Web services;agent system development;semantic Web;agent internal behavior models;interagent behavior models;multiagent systems;domain-specific modeling language;DSML;formal semantics;agent-semantic service interactions;MAS validation;semantic rules;Alloy specification language;relational logic;first-order logic;Semantics;Semantic Web;Metals;Web services;Grounding;Analytical models;Syntactics;Semantics of Languages;Multi-agent Systems;Semantic Web;Web Services;Alloy;Domain Specific Modeling Languages}, 
doi={10.1109/COMPSACW.2012.112}, 
ISSN={}, 
month={July},
note={Amount of References: 4 },
}


@ARTICLE{8352646, 
author={A. Dorri and S. S. Kanhere and R. Jurdak}, 
journal={IEEE Access}, 
title={Multi-Agent Systems: A Survey}, 
year={2018}, 
volume={6}, 
number={}, 
pages={28573-28593}, 
abstract={Multi-agent systems (MASs) have received tremendous attention from scholars in different disciplines, including computer science and civil engineering, as a means to solve complex problems by subdividing them into smaller tasks. The individual tasks are allocated to autonomous entities, known as agents. Each agent decides on a proper action to solve the task using multiple inputs, e.g., history of actions, interactions with its neighboring agents, and its goal. The MAS has found multiple applications, including modeling complex systems, smart grids, and computer networks. Despite their wide applicability, there are still a number of challenges faced by MAS, including coordination between agents, security, and task allocation. This survey provides a comprehensive discussion of all aspects of MAS, starting from definitions, features, applications, challenges, and communications to evaluation. A classification on MAS applications and challenges is provided along with references for further studies. We expect this paper to serve as an insightful and comprehensive resource on the MAS for researchers and practitioners in the area.}, 
keywords={multi-agent systems;smart power grids;smart grids;MAS applications;task allocation;computer networks;complex systems;multiple applications;neighboring agents;complex problems;computer science;multiagent systems;Task analysis;Multi-agent systems;Computer science;Security;Australia;Computational modeling;Decision making;Multi-agent systems;survey;MAS applications;challenges}, 
doi={10.1109/ACCESS.2018.2831228}, 
ISSN={2169-3536}, 
month={},
note={Amount of References: 0 },
}

%need abstract
@article{luke2005mason,
  title={Mason: A multiagent simulation environment},
  author={Luke, Sean and Cioffi-Revilla, Claudio and Panait, Liviu and Sullivan, Keith and Balan, Gabriel},
  abstract={MASON is a fast, easily extensible, discrete-event multi-agent simulation toolkit in Java, designed to serve as the basis for a wide range of multi-agent simulation tasks ranging from swarm robotics to machine learning to social complexity environments. MASON carefully delineates between model and visualization, allowing models to be dynamically detached from or attached to visualizers, and to change platforms mid-run. This paper describes the MASON system, its motivation, and its basic architectural design. It then compares MASON to related multi-agent libraries in the public domain, and discusses six applications of the system built over the past year which suggest its breadth of utility.},
  journal={Simulation},
  volume={81},
  number={7},
  pages={517--527},
  year={2005},
  publisher={Sage Publications Sage CA: Thousand Oaks, CA},
  note={Amount of References: 964 },
}

@inproceedings{tisue2004netlogo,
  title={NetLogo: Design and implementation of a multi-agent modeling environment},
  abstract={NetLogo is a multi-agent programming
language and modeling environment for simulating
complex phenomena. It is designed for both
research and education and is used across a wide
range of disciplines and education levels. In this paper,
though, we focus on NetLogo as a tool for research
and for teaching at the undergraduate level
and higher. We outline the principles behind our design
and describe recent and planned enhancements},
  author={Tisue, Seth and Wilensky, Uri},
  booktitle={Proceedings of agent},
  volume={2004},
  pages={7--9},
  year={2004},
  note={Amount of References: 265 },
}

@inproceedings{tisue2004netlogoenvironment,
  title={Netlogo: A simple environment for modeling complexity},
  author={Tisue, Seth and Wilensky, Uri},
  booktitle={International conference on complex systems},
  abstract={NetLogo is a multi-agent programming language and
modeling environment for simulating complex phenomena. It is designed
for both research and education and is used across a wide range of disciplines
and education levels. In this paper we focus on NetLogo as a tool
for research and for teaching at the undergraduate level and higher. We
outline the principles behind our design and describe recent and planned
enhancements.},
  volume={21},
  pages={16--21},
  year={2004},
  organization={Boston, MA},
  note={Amount of References: 566 },
}

@article{minar1996swarm,
  title={The swarm simulation system: A toolkit for building multi-agent simulations},
  author={Minar, Nelson and Burkhart, Roger and Langton, Chris and Askenazi, Manor and others},
  abstract={Swarm is a multiagent software platform for the simulation of complex adaptive
systems In the Swarm system the basic unit of simulation is the swarm a collec
tion of agents executing a schedule of actions Swarm supports hierarchical model
ing approaches whereby agents can be composed of swarms of other agents in nested
structures Swarm provides ob ject oriented libraries of reusable components for build
ing models and analyzing displaying and controlling experiments on those models
Swarm is currently available as a beta version in full free source code form It requires
the GNU C Compiler Unix and X Windows More information about Swarm can be
obtained from our web pages httpwwwsantafeedupro jectsswarm
Santa
Fe Ins},
  year={1996},
  publisher={Technical report, Swarm Development Group},
  note={Amount of References: 1019 },
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@inproceedings{michel2001generic,
  title={Generic simulation tools based on MAS organization},
  author={Michel, Fabien and Ferber, Jacques and Gutknecht, Olivier},
  booktitle={10th European Workshop on Modelling Autonomous Agents in a Multi Agent World MAMAAW},
  abstract={This paper presents generic simulation tools which rely on
an original methodological approach of designing multi-agent simulators.
We will see that these tools are generic specially because they are not
related to a particular scheduling method. On the contrary they aim
at providing facilities that allow to design complex activation structures
that remain comprehensible, analyzable and moreover modifiable, thanks
to a problem division. To achieve this, the main idea of this methodology
is to express the multi-agent system (MAS) simulator as a particular
MAS itself and use explicitly its subjacent organizational structure. We
will show how the Aalaadin organizational model enables us to finely
apply such a methodology. Precisely, we will present a particular agent
of MadKit (the platform that relies on Aalaadin): the Scheduler agent
and its tool called Activator},
  volume={1},
  year={2001},
  note={Amount of References: 37 },
}

@article{nwana1999zeus,
  title={ZEUS: a toolkit for building distributed multiagent systems},
  author={Nwana, Hyacinth S and Ndumu, Divine T and Lee, Lyndon C and Collis, Jaron C},
  journal={Applied Artificial Intelligence},
  abstract={The multi-agent systems approach of knowledge level co-operation between autonomous agents promises significant
benefits to distributed systems engineering, such as enhanced interoperability, scalability and reconfigurability.
However, thus far, because of the innate difficulty of constructing multi-agent systems, this
promise has been largely unrealised. Hence, there is an emerging desire amongst agent developers to move
away from developing point solutions to point problems in favour of developing methodologies and toolkits for
building distributed multi-agent systems. This philosophy led to the development of the ZEUS Agent Building
Toolkit, which facilitates the rapid development of collaborative agent applications through the provision of a
library of agent-level components and an environment to support the agent building process. The ZEUS toolkit
is a synthesis of established agent technologies with some novel solutions to provide an integrated collaborative
agent building environment.},
  volume={13},
  number={1-2},
  pages={129--185},
  year={1999},
  publisher={Taylor \& Francis},
   note={Amount of References: 456 },
}

@inproceedings{ferber1998meta,
  title={A meta-model for the analysis and design of organizations in multi-agent systems},
  author={Ferber, Jacques and Gutknecht, Olivier},
  booktitle={Multi Agent Systems, 1998. Proceedings. International Conference on},
  abstract={This paper presents a generic meta-model of multi-agent systems based on organizational concepts such as groups, roles and structures. This model, called AALAADIN, defines a very simple description of coordination and negotiation schemes through multi-agent systems. Aalaadin is a meta-model of artificial organization by which one can build multi-agent systems with different forms of organizations such as market-like and hierarchical organizations. We show that this meta-model allows for agent heterogeneity in languages, applications and architectures. We also introduce the concept of organizational reflection which uses the same conceptual model to describe system level tasks such as remote communication and migration of agents. Finally, we briefly describe a platform, called MADKIT, based on this model. It relies on a minimal agent kernel with platform-level services implemented as agents, groups and roles.},
  pages={128--135},
  year={1998},
  organization={IEEE},
  note={Amount of References: 1154 },
}

@article{omicini2008artifacts,
  title={Artifacts in the A\&A meta-model for multi-agent systems},
  author={Omicini, Andrea and Ricci, Alessandro and Viroli, Mirko},
  journal={Autonomous agents and multi-agent systems},
  abstract={In this article we focus on the notion of artifact for agents in multi-agent systems (MAS) as a basis for a new meta-model promoting the modelling and engineering of agent societies and MAS environment as first-class entities. Its conceptual foundations lay upon theories and results coming from computational sciences as well as from organisational and cognitive sciences, psychology, computer supported cooperative work (CSCW), anthropology and ethology. In the resulting agents & artifacts (A&A) meta-model, agents are the (pro-)active entities in charge of the goals/tasks that altogether build up the whole MAS behaviour, whereas artifacts are the reactive entities providing the services and functions that make individual agents work together in a MAS, and that shape agent environment according to the MAS needs. After presenting the scientific background, we define the notions of artifact in the A&A meta-model, discuss how it affects the notion of intelligence in MAS, and show its application to a number of agent-related research fields.},
  volume={17},
  number={3},
  pages={432--456},
  year={2008},
  publisher={Springer},
  note={Amount of References: 357 },
}

@inproceedings{juan2003meta,
  title={A meta-model for intelligent adaptive multi-agent systems in open environments},
  author={Juan, Thomas and Sterling, Leon},
  booktitle={Proceedings of the second international joint conference on Autonomous agents and multiagent systems},
  abstract={In this paper, we introduce the ROADMAP meta-model, designed to describe intelligent adaptive multi-agent systems in open environments. The meta-model captures our understanding of the properties of such systems and our perspective on organizational concepts such as roles. It defines agent constructs such as agents and roles, and their inter-relationships such as aggregation, in a way that best facilitates the development of intelligent adaptive systems in open environments.We intend to use the meta-model for knowledge sharing. We expect developers of AOSE methodologies, tools, programming languages and frameworks to benefit from understanding the design and structure of the ROADMAP meta-model. By adopting the meta-model, the resulting methodologies, tools and languages should inherit its desirable characteristics and better support the development of intelligent adaptive systems in open environments.},
  pages={1024--1025},
  year={2003},
  organization={ACM},
  note={Amount of References: 25 },
}

@inproceedings{hilaire2000formal,
  title={Formal specification and prototyping of multi-agent systems},
  author={Hilaire, Vincent and Koukam, Abder and Gruer, Pablo and M{\"u}ller, Jean-Pierre},
  booktitle={International Workshop on Engineering Societies in the Agents World},
  pages={114--127},
  abstract={This paper presents a multi agent-oriented prototyping approach. It is a generic approach, applicable to a wide range of multi-agent systems. This approach relies on a few assumptions, the most important is that MAS must be described by an organizational model which semantics is given in term of a formal framework. This model allows for a simple description of both individual and collective multi-agent system aspects. The framework we use to give a formal description of this model is based on a multi-formalism approach. We illustrate this approach through a case study.},
  year={2000},
  organization={Springer},
  note={Amount of References: 135 },
}

@article{niazi2011agent,
  title={Agent-based computing from multi-agent systems to agent-based models: a visual survey},
  author={Niazi, Muaz and Hussain, Amir},
  journal={Scientometrics},
  volume={89},
  number={2},
  pages={479},
  abstract={Agent-based computing is a diverse research domain concerned with the building of intelligent software based on the concept of “agents”. In this paper, we use Scientometric analysis to analyze all sub-domains of agent-based computing. Our data consists of 1,064 journal articles indexed in the ISI web of knowledge published during a 20 year period: 1990–2010. These were retrieved using a topic search with various keywords commonly used in sub-domains of agent-based computing. In our proposed approach, we have employed a combination of two applications for analysis, namely Network Workbench and CiteSpace—wherein Network Workbench allowed for the analysis of complex network aspects of the domain, detailed visualization-based analysis of the bibliographic data was performed using CiteSpace. Our results include the identification of the largest cluster based on keywords, the timeline of publication of index terms, the core journals and key subject categories. We also identify the core authors, top countries of origin of the manuscripts along with core research institutes. Finally, our results have interestingly revealed the strong presence of agent-based computing in a number of non-computing related scientific domains including Life Sciences, Ecological Sciences and Social Sciences.},
  year={2011},
  publisher={Springer},
  note={Amount of References: 239 },
}

@article{railsback2006agent,
  title={Agent-based simulation platforms: Review and development recommendations},
  author={Railsback, Steven F and Lytinen, Steven L and Jackson, Stephen K},
  journal={Simulation},
  volume={82},
  abstract={Five software platforms for scientific agent-based models (ABMs) were reviewed by implementing example models in each. NetLogo is the highest-level platform, providing a simple yet powerful programming language, built-in graphical interfaces, and comprehensive documentation. It is designed primarily for ABMs of mobile individuals with local interactions in a grid space, but not necessarily clumsy for others. NetLogo is highly recommended, even for prototyping complex models. MASON, Repast, and Swarm are “framework and library” platforms, providing a conceptual framework for organizing and designing ABMs and corresponding software libraries. MASON is least mature and designed with execution speed a high priority. The Objective-C version of Swarm is the most mature library platform and is stable and well organized. Objective-C seems more natural than Java for ABMs but weak error-handling and the lack of developer tools are drawbacks. Java Swarm allows Swarm’s Objective-C libraries to be called from Java; it does not seem to combine the advantages of the two languages well. Repast provides Swarm-like functions in a Java library and is a good choice for many, but parts of its organization and design could be improved. A rough comparison of execution speed found MASON and Repast usually fastest (MASON 1-35$\%$ faster than Repast), Swarm (including Objective-C) fastest for simple models but slowest for complex ones, and NetLogo intermediate. Recommendations include completing the documentation (for all platforms except NetLogo), strengthening conceptual frameworks, providing better tools for statistical output and automating simulation experiments, simplifying common tasks, and researching technologies for understanding how simulation results arise.},
  number={9},
  pages={609--623},
  year={2006},
  publisher={Sage Publications Sage CA: Thousand Oaks, CA},
  note={Amount of References: 793 },
}

@article{gilbert2002platforms,
  title={Platforms and methods for agent-based modeling},
  author={Gilbert, Nigel and Bankes, Steven},
  journal={Proceedings of the National Academy of Sciences},
  volume={99},
  abstract={The range of tools designed to help build agent-based models is briefly reviewed. It is suggested that although progress has been made, there is much further design and development work to be done. Modelers have an important part to play, because the creation of tools and models using those tools proceed in a dialectical relationship.},
  number={suppl 3},
  pages={7197--7198},
  year={2002},
  publisher={National Acad Sciences},
  note={Amount of References: 234 },
}

@article{nikolai2009tools,
  title={Tools of the trade: A survey of various agent based modeling platforms},
  author={Nikolai, Cynthia and Madey, Gregory},
  journal={Journal of Artificial Societies and Social Simulation},
  volume={12},
  abstract{Agent Based Modeling (ABM) toolkits are as diverse as the community of people who use them. With so many toolkits available, the choice of which one is best suited for a project is left to word of mouth, past experiences in using particular toolkits and toolkit publicity. This is especially troublesome for projects that require specialization. Rather than using toolkits that are the most publicized but are designed for general projects, using this paper, one will be able to choose a toolkit that already exists and that may be built especially for one's particular domain and specialized needs. In this paper, we examine the entire continuum of agent based toolkits. We characterize each based on 5 important characteristics users consider when choosing a toolkit, and then we categorize the characteristics into user-friendly taxonomies that aid in rapid indexing and easy reference.},
  number={2},
  pages={2},
  year={2009},
  note={Amount of References: 309 },
}

@article{collier2003repast,
  title={Repast: An extensible framework for agent simulation},
  author={Collier, Nick},
  journal={The University of Chicago’s Social Science Research},
  volume={36},
  abstract={RePast is a software framework for agent-based simulation created by Social Science
Research Computing at the University of Chicago. It provides an integrated library of
classes for creating, running, displaying, and collecting data from an agent-based
simulation. This paper is an overview of RePast's design, features, and capabilities and
describes the implementation of some of its key abstractions.},
  pages={2003},
  year={2003},
  note={Amount of References: 305 },
}

@inproceedings{borshchev2004system,
  title={From system dynamics and discrete event to practical agent based modeling: reasons, techniques, tools},
  abstract={This paper may be considered as a practical reference for those who wish to add
(now sufficiently matured) Agent Based modeling to their analysis toolkit and may or may
not have some System Dynamics or Discrete Event modeling background. We focus on
systems that contain large numbers of active objects (people, business units, animals,
vehicles, or even things like projects, stocks, products, etc. that have timing, event ordering
or other kind of individual behavior associated with them). We compare the three major
paradigms in simulation modeling: System Dynamics, Discrete Event and Agent Based
Modeling with respect to how they approach such systems. We show in detail how an
Agent Based model can be built from an existing System Dynamics or a Discrete Event
model and then show how easily it can be further enhanced to capture much more
complicated behavior, dependencies and interactions thus providing for deeper insight in
the system being modeled. Commonly understood examples are used throughout the paper;
all models are specified in the visual language supported by AnyLogicTM tool. We view and
present Agent Based modeling not as a substitution to older modeling paradigms but as a
useful add-on that can be efficiently combined with System Dynamics and Discrete Event
modeling. Several multi-paradigm model architectures are suggested. },
  author={Borshchev, Andrei and Filippov, Alexei},
  booktitle={Proceedings of the 22nd international conference of the system dynamics society},
  volume={22},
  year={2004},
  organization={Citeseer},
  note={Amount of References: 869 },
}

@inproceedings{bayardo1997infosleuth,
  title={InfoSleuth: agent-based semantic integration of information in open and dynamic environments},
  abstract={The goal of the InfoSleuth project at MCC is to exploit and synthesize new technologies into a unified system that retrieves and processes information in an ever-changing network of information sources. InfoSleuth has its roots in the Carnot project at MCC, which specialized in integrating heterogeneous information bases. However, recent emerging technologies such as internetworking and the World Wide Web have significantly expanded the types, availability, and volume of data available to an information management system. Furthermore, in these new environments, there is no formal control over the registration of new information sources, and applications tend to be developed without complete knowledge of the resources that will be available when they are run. Federated database projects such as Carnot that do static data integration do not scale up and do not cope well with this ever-changing environment. On the other hand, recent Web technologies, based on keyword search engines, are scalable but, unlike federated databases, are incapable of accessing information based on concepts. In this experience paper, we describe the architecture, design, and implementation of a working version of InfoSleuth. We show how InfoSleuth integrates new technological developments such as agent technology, domain ontologies, brokerage, and internet computing, in support of mediated interoperation of data and services in a dynamic and open environment. We demonstrate the use of information brokering and domain ontologies as key elements for scalability.},
  author={Bayardo Jr, Roberto J and Bohrer, William and Brice, Richard and Cichocki, Andrzej and Fowler, Jerry and Helal, Abdelsalam and Kashyap, Vipul and Ksiezyk, Tomasz and Martin, Gale and Nodine, Marian and others},
  booktitle={Acm Sigmod Record},
  volume={26},
  number={2},
  pages={195--206},
  year={1997},
  organization={ACM},
  note={Amount of References: 725 },
}

@inproceedings{christley2004ontology,
  title={An ontology for agent-based modeling and simulation},
  abstract={Ontologies are a formal methodology for establishing a common vocabulary, for
defining the concepts and relationships between those concepts of a particular
domain, and for reasoning about the objects, behaviors, and knowledge that comprises
the domain. In this paper, we present an ontology for agent-based modeling and
simulation. Agent-based modeling and simulation has become an important and
popular paradigm for the computational social and natural sciences; however, the
application of this paradigm tends to be performed in an ad-hoc fashion leading to
questions about underlying assumptions in an agent-based model, verification of the
software implementation as a representation of that model, and validation of
hypothesized conclusions inferred from data produced by computer simulation
experiments. An ontology provides a formal, logical knowledge representation that
supports automated reasoning. Such reasoning capability provides for consistency
checking of the concepts and relationships in an agent-based model, can infer the
assumptions inherent in a model, can infer the assumptions and the parameters
inherent in a simulation or software representation of a model, and can enforce
adherence to formal methods or best practices for verification and validation testing.
These reasoning tasks direct, or at least inform, the modeler about relevant techniques
and methods in the agent-based paradigm. The reasoning capability also provides a
framework for automated generation of software code, automated design and
execution of simulation experiments as well as automated generation and execution
of validation tests for those experiments. Using the standard Ontology Web
Language (OWL), we provide a complete, detailed ontology of agent-based modeling
and simulation, and we show how the ontology is used as part of the modeling and
simulation process.},
  author={Christley, Scott and Xiang, Xiaorong and Madey, Greg},
  booktitle={Proceedings of the agent 2004 conference},
  year={2004},
  note={Amount of References: 36 },
}

@inproceedings{lin2010modeling,
  title={Modeling cyber-physical systems with semantic agents},
  abstract={The development of accurate models for cyber-physical systems (CPSs) is hampered by the complexity of these systems, fundamental differences in the operation of cyber and physical components, and significant interdependencies among these components. Agent-based modeling shows promise in overcoming these challenges, due to the flexibility of software agents as autonomous and intelligent decision-making components. Semantic agent systems are even more capable, as the structure they provide facilitates the extraction of meaningful content from the data provided to the software agents. In this paper, we present a multi-agent model for a CPS, where the semantic capabilities are underpinned by sensor networks that provide information about the physical operation to the cyber infrastructure. This model is used to represent the static structure and dynamic behavior of an intelligent water distribution network as a CPS case study.},
  author={Lin, Jing and Sedigh, Sahra and Miller, Ann},
  booktitle={Computer Software and Applications Conference Workshops (COMPSACW), 2010 IEEE 34th Annual},
  pages={13--18},
  year={2010},
  organization={IEEE},
  note={Amount of References: 66 },
}

@article{oliveira1999multi,
  title={Multi-agent systems: which research for which applications},
  author={Oliveira, Eugenio and Fischer, Klaus and Stepankova, Olga},
  journal={Robotics and Autonomous Systems},
  volume={27},
  abstract={For sometime now agent-based and multi-agent systems (MASs) have attracted the interest of researchers far beyond traditional computer science and artificial intelligence (AI). In this article we try to identify focal points of interest for researchers working in the area of distributed AI (DAI) and MAS as well as application-oriented researchers coming from related disciplines, e.g. electrical and mechanical engineering. We do this by presenting key research topics in DAI and MAS research and by identifying application domains in which the DAI and MAS technologies are most suitable. The research topics we discuss are separated into agent architectures and organisations, negotiation among agents, and self-adaptation of MAS using learning techniques. Regarding the application domains for these techniques we distinguish the application domains according to whether the agents control a physical or virtual body (Gestalt) or not. This separation of the application domains is not strict; it represents two ends of a continuum. On the one end of this continuum we have autonomous robot systems which act in a physical environment (sometimes referred to as hardware agents), and on the other end, we have abstract environments, such as in workflow systems, which rarely display the geometrical and physical aspects of the environment we are used to living in.},
  number={1-2},
  pages={91--106},
  year={1999},
  publisher={Elsevier},
  note={Amount of References: 195 },
}
